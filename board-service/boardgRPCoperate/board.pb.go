// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: board.proto

package board

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LikeCommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiverID     string `protobuf:"bytes,1,opt,name=GiverID,proto3" json:"GiverID,omitempty"`
	IsGiverLike bool   `protobuf:"varint,2,opt,name=isGiverLike,proto3" json:"isGiverLike,omitempty"`
	ReceiverID  string `protobuf:"bytes,3,opt,name=ReceiverID,proto3" json:"ReceiverID,omitempty"`
	CommentID   string `protobuf:"bytes,4,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
}

func (x *LikeCommentInfo) Reset() {
	*x = LikeCommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeCommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentInfo) ProtoMessage() {}

func (x *LikeCommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentInfo.ProtoReflect.Descriptor instead.
func (*LikeCommentInfo) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{0}
}

func (x *LikeCommentInfo) GetGiverID() string {
	if x != nil {
		return x.GiverID
	}
	return ""
}

func (x *LikeCommentInfo) GetIsGiverLike() bool {
	if x != nil {
		return x.IsGiverLike
	}
	return false
}

func (x *LikeCommentInfo) GetReceiverID() string {
	if x != nil {
		return x.ReceiverID
	}
	return ""
}

func (x *LikeCommentInfo) GetCommentID() string {
	if x != nil {
		return x.CommentID
	}
	return ""
}

type ReleaseCommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CommentID string `protobuf:"bytes,2,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
}

func (x *ReleaseCommentInfo) Reset() {
	*x = ReleaseCommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseCommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseCommentInfo) ProtoMessage() {}

func (x *ReleaseCommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseCommentInfo.ProtoReflect.Descriptor instead.
func (*ReleaseCommentInfo) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{1}
}

func (x *ReleaseCommentInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ReleaseCommentInfo) GetCommentID() string {
	if x != nil {
		return x.CommentID
	}
	return ""
}

type CollectBoardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsCollect  bool   `protobuf:"varint,2,opt,name=isCollect,proto3" json:"isCollect,omitempty"`
	BoardID    string `protobuf:"bytes,3,opt,name=BoardID,proto3" json:"BoardID,omitempty"`
	BoardTitle string `protobuf:"bytes,4,opt,name=BoardTitle,proto3" json:"BoardTitle,omitempty"`
}

func (x *CollectBoardInfo) Reset() {
	*x = CollectBoardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectBoardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectBoardInfo) ProtoMessage() {}

func (x *CollectBoardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectBoardInfo.ProtoReflect.Descriptor instead.
func (*CollectBoardInfo) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{2}
}

func (x *CollectBoardInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CollectBoardInfo) GetIsCollect() bool {
	if x != nil {
		return x.IsCollect
	}
	return false
}

func (x *CollectBoardInfo) GetBoardID() string {
	if x != nil {
		return x.BoardID
	}
	return ""
}

func (x *CollectBoardInfo) GetBoardTitle() string {
	if x != nil {
		return x.BoardTitle
	}
	return ""
}

type LikeBoardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsLiked bool   `protobuf:"varint,2,opt,name=isLiked,proto3" json:"isLiked,omitempty"`
	BoardID string `protobuf:"bytes,3,opt,name=BoardID,proto3" json:"BoardID,omitempty"`
}

func (x *LikeBoardInfo) Reset() {
	*x = LikeBoardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeBoardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeBoardInfo) ProtoMessage() {}

func (x *LikeBoardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeBoardInfo.ProtoReflect.Descriptor instead.
func (*LikeBoardInfo) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{3}
}

func (x *LikeBoardInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LikeBoardInfo) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *LikeBoardInfo) GetBoardID() string {
	if x != nil {
		return x.BoardID
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_board_proto protoreflect.FileDescriptor

var file_board_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x47, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x47, 0x69, 0x76, 0x65, 0x72,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x4a, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x82,
	0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x5b, 0x0a, 0x0d, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x22, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x32, 0xf2, 0x01, 0x0a, 0x0c, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x14, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_board_proto_rawDescOnce sync.Once
	file_board_proto_rawDescData = file_board_proto_rawDesc
)

func file_board_proto_rawDescGZIP() []byte {
	file_board_proto_rawDescOnce.Do(func() {
		file_board_proto_rawDescData = protoimpl.X.CompressGZIP(file_board_proto_rawDescData)
	})
	return file_board_proto_rawDescData
}

var file_board_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_board_proto_goTypes = []interface{}{
	(*LikeCommentInfo)(nil),    // 0: board.LikeCommentInfo
	(*ReleaseCommentInfo)(nil), // 1: board.ReleaseCommentInfo
	(*CollectBoardInfo)(nil),   // 2: board.CollectBoardInfo
	(*LikeBoardInfo)(nil),      // 3: board.LikeBoardInfo
	(*Response)(nil),           // 4: board.Response
}
var file_board_proto_depIdxs = []int32{
	0, // 0: board.boardService.LikeComment:input_type -> board.LikeCommentInfo
	1, // 1: board.boardService.ReleaseComment:input_type -> board.ReleaseCommentInfo
	2, // 2: board.boardService.CollectBoard:input_type -> board.CollectBoardInfo
	3, // 3: board.boardService.LikeBoard:input_type -> board.LikeBoardInfo
	4, // 4: board.boardService.LikeComment:output_type -> board.Response
	4, // 5: board.boardService.ReleaseComment:output_type -> board.Response
	4, // 6: board.boardService.CollectBoard:output_type -> board.Response
	4, // 7: board.boardService.LikeBoard:output_type -> board.Response
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_board_proto_init() }
func file_board_proto_init() {
	if File_board_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_board_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeCommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseCommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectBoardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeBoardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_board_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_board_proto_goTypes,
		DependencyIndexes: file_board_proto_depIdxs,
		MessageInfos:      file_board_proto_msgTypes,
	}.Build()
	File_board_proto = out.File
	file_board_proto_rawDesc = nil
	file_board_proto_goTypes = nil
	file_board_proto_depIdxs = nil
}
